#[repr(u64)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
pub enum BtrfsObjectId {
    RootTree = 1,
    ExtentTree = 2,
    ChunkTree = 3,
    DevTree = 4,
    FsTree = 5,
    RootTreeDir = 6,
    CsumTree = 7,
    QuotaTree = 8,
    UuidTree = 9,
    FreeSpaceTree = 10,
    BlockGroupTree = 11,
    RaidStripeTree = 12,

    Balance = -4 as _,
    Orphan = -5 as _,
    TreeLog = -6 as _,
    TreeLogFixup = -7 as _,
    TreeReloc = -8 as _,
    DataRelocTree = -9 as _,
    ExtentCsum = -10 as _,
    FreeSpace = -11 as _,
    FreeIno = -12 as _,
}

impl BtrfsObjectId {
    pub fn from_i64(id: i64) -> Option<Self> {
        use BtrfsObjectId::*;
        Some(match id {
            1 => RootTree,
            2 => ExtentTree,
            3 => ChunkTree,
            4 => DevTree,
            5 => FsTree,
            6 => RootTreeDir,
            7 => CsumTree,
            8 => QuotaTree,
            9 => UuidTree,
            10 => FreeSpaceTree,
            11 => BlockGroupTree,
            12 => RaidStripeTree,

            -4 => Balance,
            -5 => Orphan,
            -6 => TreeLog,
            -7 => TreeLogFixup,
            -8 => TreeReloc,
            -9 => DataRelocTree,
            -10 => ExtentCsum,
            -11 => FreeSpace,
            -12 => FreeIno,

            _ => return None,
        })
    }

    pub fn name(self) -> &'static str {
        match self {
            Self::RootTree => "ROOT_TREE",
            Self::ExtentTree => "EXTENT_TREE",
            Self::ChunkTree => "CHUNK_TREE",
            Self::DevTree => "DEV_TREE",
            Self::FsTree => "FS_TREE",
            Self::RootTreeDir => "ROOT_TREE_DIR",
            Self::CsumTree => "CSUM_TREE",
            Self::QuotaTree => "QUOTA_TREE",
            Self::UuidTree => "UUID_TREE",
            Self::FreeSpaceTree => "FREE_SPACE_TREE",
            Self::BlockGroupTree => "BLOCK_GROUP_TREE",
            Self::RaidStripeTree => "RAID_STRIPE_TREE",
            Self::Balance => "BALANCE",
            Self::Orphan => "ORPHAN",
            Self::TreeLog => "TREE_LOG",
            Self::TreeLogFixup => "TREE_LOG_FIXUP",
            Self::TreeReloc => "TREE_RELOC",
            Self::DataRelocTree => "DATA_RELOC_TREE",
            Self::ExtentCsum => "EXTENT_CSUM",
            Self::FreeSpace => "FREE_SPACE",
            Self::FreeIno => "FREE_INO",
        }
    }
}
#[repr(u8)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
pub enum BtrfsKeyType {
    InodeItem = 1,
    InodeRef = 12,
    InodeExtref = 13,
    XattrItem = 24,
    VerityDescItem = 36,
    VerityMerkleItem = 37,
    OrphanItem = 48,
    DirLogItem = 60,
    DirLogIndex = 72,
    DirItem = 84,
    DirIndex = 96,
    ExtentData = 108,
    ExtentCsum = 128,
    RootItem = 132,
    RootBackref = 144,
    RootRef = 156,
    ExtentItem = 168,
    MetadataItem = 169,
    ExtentOwnerRef = 172,
    TreeBlockRef = 176,
    ExtentDataRef = 178,
    SharedBlockRef = 182,
    SharedDataRef = 184,
    BlockGroupItem = 192,
    FreeSpaceInfo = 198,
    FreeSpaceExtent = 199,
    FreeSpaceBitmap = 200,
    DevExtent = 204,
    DevItem = 216,
    ChunkItem = 228,
    RaidStripe = 230,
    QgroupStatus = 240,
    QgroupInfo = 242,
    QgroupLimit = 244,
    QgroupRelation = 246,
    TemporaryItem = 248,
    PersistentItem = 249,
    DevReplace = 250,
    UuidSubvol = 251,
    UuidReceivedSubvol = 252,
    StringItem = 253,
}

impl BtrfsKeyType {
    pub fn from_u8(value: u8) -> Option<Self> {
        use BtrfsKeyType::*;
        Some(match value {
            1 => InodeItem,
            12 => InodeRef,
            13 => InodeExtref,
            24 => XattrItem,
            36 => VerityDescItem,
            37 => VerityMerkleItem,
            48 => OrphanItem,
            60 => DirLogItem,
            72 => DirLogIndex,
            84 => DirItem,
            96 => DirIndex,
            108 => ExtentData,
            128 => ExtentCsum,
            132 => RootItem,
            144 => RootBackref,
            156 => RootRef,
            168 => ExtentItem,
            169 => MetadataItem,
            172 => ExtentOwnerRef,
            176 => TreeBlockRef,
            178 => ExtentDataRef,
            182 => SharedBlockRef,
            184 => SharedDataRef,
            192 => BlockGroupItem,
            198 => FreeSpaceInfo,
            199 => FreeSpaceExtent,
            200 => FreeSpaceBitmap,
            204 => DevExtent,
            216 => DevItem,
            228 => ChunkItem,
            230 => RaidStripe,
            240 => QgroupStatus,
            242 => QgroupInfo,
            244 => QgroupLimit,
            246 => QgroupRelation,
            248 => TemporaryItem,
            249 => PersistentItem,
            250 => DevReplace,
            251 => UuidSubvol,
            252 => UuidReceivedSubvol,
            253 => StringItem,
            _ => return None,
        })
    }
}
